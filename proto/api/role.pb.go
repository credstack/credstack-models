// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/api/role.proto

package api

import (
	header "github.com/credstack/credstack-models/proto/header"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Role - A container for permission scopes that can be assigned to users
type Role struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// header - Shared data values used across all objects
	Header *header.Header `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty" bson:"header"` // @gotags: bson:"header"
	// name - The name of the role as defined by the user
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" bson:"name"` // @gotags: bson:"name"
	// description - The description of the role as defined by the user
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description"` // @gotags: bson:"description"
	// scopes - A map representing the scopes assigned to this role. Key is the API id, and value is the ID of the scope
	Scopes        map[string]string `protobuf:"bytes,4,rep,name=scopes,proto3" json:"scopes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value" bson:"scopes"` // @gotags: bson:"scopes"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Role) Reset() {
	*x = Role{}
	mi := &file_proto_api_role_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_proto_api_role_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_proto_api_role_proto_rawDescGZIP(), []int{0}
}

func (x *Role) GetHeader() *header.Header {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Role) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Role) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Role) GetScopes() map[string]string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

var File_proto_api_role_proto protoreflect.FileDescriptor

const file_proto_api_role_proto_rawDesc = "" +
	"\n" +
	"\x14proto/api/role.proto\x12\x03api\x1a\x19proto/header/header.proto\"\xce\x01\n" +
	"\x04Role\x12&\n" +
	"\x06header\x18\x01 \x01(\v2\x0e.header.HeaderR\x06header\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12-\n" +
	"\x06scopes\x18\x04 \x03(\v2\x15.api.Role.ScopesEntryR\x06scopes\x1a9\n" +
	"\vScopesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B1Z/github.com/credstack/credstack-models/proto/apib\x06proto3"

var (
	file_proto_api_role_proto_rawDescOnce sync.Once
	file_proto_api_role_proto_rawDescData []byte
)

func file_proto_api_role_proto_rawDescGZIP() []byte {
	file_proto_api_role_proto_rawDescOnce.Do(func() {
		file_proto_api_role_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_api_role_proto_rawDesc), len(file_proto_api_role_proto_rawDesc)))
	})
	return file_proto_api_role_proto_rawDescData
}

var file_proto_api_role_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_api_role_proto_goTypes = []any{
	(*Role)(nil),          // 0: api.Role
	nil,                   // 1: api.Role.ScopesEntry
	(*header.Header)(nil), // 2: header.Header
}
var file_proto_api_role_proto_depIdxs = []int32{
	2, // 0: api.Role.header:type_name -> header.Header
	1, // 1: api.Role.scopes:type_name -> api.Role.ScopesEntry
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_api_role_proto_init() }
func file_proto_api_role_proto_init() {
	if File_proto_api_role_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_api_role_proto_rawDesc), len(file_proto_api_role_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_api_role_proto_goTypes,
		DependencyIndexes: file_proto_api_role_proto_depIdxs,
		MessageInfos:      file_proto_api_role_proto_msgTypes,
	}.Build()
	File_proto_api_role_proto = out.File
	file_proto_api_role_proto_goTypes = nil
	file_proto_api_role_proto_depIdxs = nil
}
