// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/token/ticket.proto

package token

import (
	api "github.com/credstack/credstack-models/proto/api"
	application "github.com/credstack/credstack-models/proto/application"
	request "github.com/credstack/credstack-models/proto/request"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// AuthenticationTicket - An authentication ticket is an internal structure used by CredStack to issue tokens. This is
// not defined within the OAuth/OIDC spec, however its existence keeps functions clean and prevents having 4-5 parameters
// in a single function
//
// TODO: Ideally, this would include claims as well however creating a claims structure would mean we would have to write functions for marshaling this
type AuthenticationTicket struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// application - The application that user is attempting to issue a token from
	Application *application.Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty" bson:"application"` // @gotags: bson:"application"
	// api - The API that the represents the audience the user wants a token from
	Api *api.API `protobuf:"bytes,2,opt,name=api,proto3" json:"api,omitempty" bson:"api"` // @gotags: bson:"api"
	// token_request - The token request that the user has made
	TokenRequest  *request.TokenRequest `protobuf:"bytes,3,opt,name=token_request,json=tokenRequest,proto3" json:"token_request,omitempty" bson:"token_request"` // @gotags: bson:"token_request"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticationTicket) Reset() {
	*x = AuthenticationTicket{}
	mi := &file_proto_token_ticket_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticationTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationTicket) ProtoMessage() {}

func (x *AuthenticationTicket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_token_ticket_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationTicket.ProtoReflect.Descriptor instead.
func (*AuthenticationTicket) Descriptor() ([]byte, []int) {
	return file_proto_token_ticket_proto_rawDescGZIP(), []int{0}
}

func (x *AuthenticationTicket) GetApplication() *application.Application {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *AuthenticationTicket) GetApi() *api.API {
	if x != nil {
		return x.Api
	}
	return nil
}

func (x *AuthenticationTicket) GetTokenRequest() *request.TokenRequest {
	if x != nil {
		return x.TokenRequest
	}
	return nil
}

var File_proto_token_ticket_proto protoreflect.FileDescriptor

const file_proto_token_ticket_proto_rawDesc = "" +
	"\n" +
	"\x18proto/token/ticket.proto\x12\x05token\x1a#proto/application/application.proto\x1a\x13proto/api/api.proto\x1a\x19proto/request/token.proto\"\xaa\x01\n" +
	"\x14AuthenticationTicket\x12:\n" +
	"\vapplication\x18\x01 \x01(\v2\x18.application.ApplicationR\vapplication\x12\x1a\n" +
	"\x03api\x18\x02 \x01(\v2\b.api.APIR\x03api\x12:\n" +
	"\rtoken_request\x18\x03 \x01(\v2\x15.request.TokenRequestR\ftokenRequestB3Z1github.com/credstack/credstack-models/proto/tokenb\x06proto3"

var (
	file_proto_token_ticket_proto_rawDescOnce sync.Once
	file_proto_token_ticket_proto_rawDescData []byte
)

func file_proto_token_ticket_proto_rawDescGZIP() []byte {
	file_proto_token_ticket_proto_rawDescOnce.Do(func() {
		file_proto_token_ticket_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_token_ticket_proto_rawDesc), len(file_proto_token_ticket_proto_rawDesc)))
	})
	return file_proto_token_ticket_proto_rawDescData
}

var file_proto_token_ticket_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_token_ticket_proto_goTypes = []any{
	(*AuthenticationTicket)(nil),    // 0: token.AuthenticationTicket
	(*application.Application)(nil), // 1: application.Application
	(*api.API)(nil),                 // 2: api.API
	(*request.TokenRequest)(nil),    // 3: request.TokenRequest
}
var file_proto_token_ticket_proto_depIdxs = []int32{
	1, // 0: token.AuthenticationTicket.application:type_name -> application.Application
	2, // 1: token.AuthenticationTicket.api:type_name -> api.API
	3, // 2: token.AuthenticationTicket.token_request:type_name -> request.TokenRequest
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_token_ticket_proto_init() }
func file_proto_token_ticket_proto_init() {
	if File_proto_token_ticket_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_token_ticket_proto_rawDesc), len(file_proto_token_ticket_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_token_ticket_proto_goTypes,
		DependencyIndexes: file_proto_token_ticket_proto_depIdxs,
		MessageInfos:      file_proto_token_ticket_proto_msgTypes,
	}.Build()
	File_proto_token_ticket_proto = out.File
	file_proto_token_ticket_proto_goTypes = nil
	file_proto_token_ticket_proto_depIdxs = nil
}
