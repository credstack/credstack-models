// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/token/token.proto

package token

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Token - An internal representation of an issued token. This is generally not displayed
// to the user, but is instead used for tracking tokens internally in the database
type Token struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// sub - The subject the token was issued for. Can be a user id or a client ID
	Sub string `protobuf:"bytes,1,opt,name=sub,proto3" json:"sub,omitempty" bson:"sub"` // @gotags: bson:"sub"
	// client_id - The client ID of the application that issued the token
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty" bson:"client_id"` // @gotags: bson:"client_id"
	// access_token - The access token that was issued
	AccessToken string `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" bson:"access_token"` // @gotags: bson:"access_token"
	// refresh_token - The refresh token that was issued
	RefreshToken string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" bson:"refresh_token"` // @gotags: bson:"refresh_token"
	// id_token - The ID token that was issued
	IdToken string `protobuf:"bytes,5,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty" bson:"id_token"` // @gotags: bson:"id_token"
	// expires_in - The time in seconds that the token expires in
	ExpiresIn uint32 `protobuf:"varint,6,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty" bson:"expires_in"` // @gotags: bson:"expires_in"
	// expires_at - A timestamp that represents the datetime in which the access token expires
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty" bson:"expires_at"` // @gotags: bson:"expires_at"
	// refresh_expires_at - A timestamp that represents the datetime in which the refresh token expires
	RefreshExpiresAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=refresh_expires_at,json=refreshExpiresAt,proto3" json:"refresh_expires_at,omitempty" bson:"refresh_expires_at"` // @gotags: bson:"refresh_expires_at"
	// scope - Any permission scopes that were issued with the token
	Scope         string `protobuf:"bytes,9,opt,name=scope,proto3" json:"scope,omitempty" bson:"scope"` // @gotags: bson:"scope"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Token) Reset() {
	*x = Token{}
	mi := &file_proto_token_token_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Token) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Token) ProtoMessage() {}

func (x *Token) ProtoReflect() protoreflect.Message {
	mi := &file_proto_token_token_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Token.ProtoReflect.Descriptor instead.
func (*Token) Descriptor() ([]byte, []int) {
	return file_proto_token_token_proto_rawDescGZIP(), []int{0}
}

func (x *Token) GetSub() string {
	if x != nil {
		return x.Sub
	}
	return ""
}

func (x *Token) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Token) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *Token) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *Token) GetIdToken() string {
	if x != nil {
		return x.IdToken
	}
	return ""
}

func (x *Token) GetExpiresIn() uint32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

func (x *Token) GetExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *Token) GetRefreshExpiresAt() *timestamp.Timestamp {
	if x != nil {
		return x.RefreshExpiresAt
	}
	return nil
}

func (x *Token) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

var File_proto_token_token_proto protoreflect.FileDescriptor

const file_proto_token_token_proto_rawDesc = "" +
	"\n" +
	"\x17proto/token/token.proto\x12\x05token\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd3\x02\n" +
	"\x05Token\x12\x10\n" +
	"\x03sub\x18\x01 \x01(\tR\x03sub\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12!\n" +
	"\faccess_token\x18\x03 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x04 \x01(\tR\frefreshToken\x12\x19\n" +
	"\bid_token\x18\x05 \x01(\tR\aidToken\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x06 \x01(\rR\texpiresIn\x129\n" +
	"\n" +
	"expires_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x12H\n" +
	"\x12refresh_expires_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\x10refreshExpiresAt\x12\x14\n" +
	"\x05scope\x18\t \x01(\tR\x05scopeB3Z1github.com/credstack/credstack-models/proto/tokenb\x06proto3"

var (
	file_proto_token_token_proto_rawDescOnce sync.Once
	file_proto_token_token_proto_rawDescData []byte
)

func file_proto_token_token_proto_rawDescGZIP() []byte {
	file_proto_token_token_proto_rawDescOnce.Do(func() {
		file_proto_token_token_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_token_token_proto_rawDesc), len(file_proto_token_token_proto_rawDesc)))
	})
	return file_proto_token_token_proto_rawDescData
}

var file_proto_token_token_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_token_token_proto_goTypes = []any{
	(*Token)(nil),               // 0: token.Token
	(*timestamp.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_proto_token_token_proto_depIdxs = []int32{
	1, // 0: token.Token.expires_at:type_name -> google.protobuf.Timestamp
	1, // 1: token.Token.refresh_expires_at:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_token_token_proto_init() }
func file_proto_token_token_proto_init() {
	if File_proto_token_token_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_token_token_proto_rawDesc), len(file_proto_token_token_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_token_token_proto_goTypes,
		DependencyIndexes: file_proto_token_token_proto_depIdxs,
		MessageInfos:      file_proto_token_token_proto_msgTypes,
	}.Build()
	File_proto_token_token_proto = out.File
	file_proto_token_token_proto_goTypes = nil
	file_proto_token_token_proto_depIdxs = nil
}
